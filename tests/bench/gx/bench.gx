/*Generated by Lix*/
:- dynamic flag/2, memo_table/2.
:- use_module(library(lists)).
:- use_module(library(terms)).
:- op(1150, fx, type).
/*oldvalue__1(_7410,_7411)=oldvalue(_7410,_7411)*/
oldvalue__1(A, B) :-
        flag(gensym(A), B), !.
oldvalue__1(_, 0).
/*set_flag__1(_7895,_7874)=set_flag(gensym(_7895),_7874)*/
set_flag__1(A, B) :-
        retract(flag(gensym(A),_)), !,
        asserta(flag(gensym(A),B)).
set_flag__1(A, B) :-
        asserta(flag(gensym(A),B)).
/*gensym__1(_7147)=gensym(bench,_7147)*/
gensym__1(A) :-
        var(A),
        oldvalue__1(bench, B),
        C is B+1,
        set_flag__1(bench, C),
        name(C, D),
        name(A, [98,101,110,99,104,95,95|D]).
/*unfold__3(_8341,_8343,_8345,_8347,_8314)=unfold(store(_8341,_8343,_8345,_8347),_8314)*/
unfold__3([], A, B, [A/B], true).
unfold__3([A/_|B], A, C, [A/C|B], true).
unfold__3([A/B|C], D, E, [A/B|F], (true,G)) :-
        call(D\==A),
        unfold__3(C, D, E, F, G).
/*unfold__5(_9248,_9250,_9252,_9223)=unfold(l_eval(_9248,_9250,_9252),_9223)*/
unfold__5([], _, [], true).
unfold__5([A|B], C, [D|E], (F,G)) :-
        unfold__4(A, C, D, F),
        unfold__5(B, C, E, G).
/*unfold__6(_9244,_9246,_9248,_9219)=unfold(lookup(_9244,_9246,_9248),_9219)*/
unfold__6(A, [A/B|_], B, true).
unfold__6(A, [B/_|C], D, (A\==B,E)) :-
        unfold__6(A, C, D, E).
/*unfold__8(_9582,_9584,_9559)=unfold(test(_9582,_9584),_9559)*/
unfold__8(eq(A,B), C, (D,E)) :-
        unfold__4(A, C, F, D),
        unfold__4(B, C, F, E).
/*unfold__7(_9252,_9254,_9256,_9258,_9260,_9223)=unfold(eval_if(_9252,_9254,_9256,_9258,_9260),_9223)*/
unfold__7(A, B, _, C, D, (E,!,F)) :-
        unfold__8(A, C, E),
        unfold__4(B, C, D, F).
unfold__7(_, _, A, B, C, D) :-
        unfold__4(A, B, C, D).
/*simplify_eqL__1(_10002,_10003,_10004)=simplify_eqL(_10002,_10003,_10004)*/
simplify_eqL__1([A], [B], C) :-
        simplify_eq__1(A, B, C).
simplify_eqL__1([A|B], [C|D], (E,F)) :-
        simplify_eq__1(A, C, E),
        simplify_eqL__1(B, D, F).
/*simplify_eq__1(_9690,_9691,_9692)=simplify_eq(_9690,_9691,_9692)*/
simplify_eq__1(A, B, fail) :-
        A\=B.
simplify_eq__1(A, B, true) :-
        A==B.
simplify_eq__1(A, B, A=B) :-
        var(A), !.
simplify_eq__1(A, B, A=B) :-
        var(B), !.
simplify_eq__1(A, B, C) :-
        nonvar(A),
        nonvar(B),
        functor(A, D, E),
        functor(B, D, E),
        A=..[D|F],
        B=..[D|G],
        simplify_eqL__1(F, G, C).
/*make_disj__1(_9450,_9451,_9452)=make_disj(_9450,_9451,_9452)*/
make_disj__1([(A,B)], C, D) :-
        simplify_eq__1(B, C, E),
        D=(E,A).
make_disj__1([(A,B)|C], D, (E;F)) :-
        make_disj__1(C, D, F),
        simplify_eq__1(B, D, G),
        E=(G,A).
/*flatten__1(_9977,_9978)=flatten(_9977,_9978)*/
flatten__1((A:-B), (A:-C)) :- !,
        flatten__1(B, C).
flatten__1((A,B), C) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D,E)
        ).
flatten__1((A;B), C) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D;E)
        ).
flatten__1((A->B;C), (D->E;F)) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        flatten__1(C, F).
flatten__1(A, A).
/*unfold__9(_9366,_9368,_9370,_9341)=unfold(rename(_9366,_9368,_9370),_9341)*/
unfold__9(A, _, B, true) :-
        call(B=A).
/*gen_filter__2(_10921,_10922,_10923)=gen_filter('.'(;(struct([],[]),struct('.','.'(struct(/,'.'(static,'.'(dynamic,[]))),'.'(type(list(struct(/,'.'(static,'.'(dynamic,[]))))),[])))),[]),_10921,_10922,_10923)*/
gen_filter__2([A], [B], C) :-
        A=..[[]],
        B=..[[]],
        append([], [], C).
gen_filter__2([A], [B], C) :-
        A=..['.',D|E],
        D=..[/,F,_],
        G=..[/,F,H],
        gen_filter__2(E, I, J),
        append([H], J, K),
        B=..['.',G|I],
        append(K, [], C).
/*gen_filter__1(_10481,_10482,_10483)=gen_filter('.'(;(struct([],[]),struct('.','.'(struct(/,'.'(static,'.'(dynamic,[]))),'.'(type(list(struct(/,'.'(static,'.'(dynamic,[]))))),[])))),'.'(dynamic,[])),_10481,_10482,_10483)*/
gen_filter__1([A,_], [B,C], D) :-
        A=..[[]],
        B=..[[]],
        append([], [C], D).
gen_filter__1([A,_], [B,C], D) :-
        A=..['.',E|F],
        E=..[/,G,_],
        H=..[/,G,I],
        gen_filter__2(F, J, K),
        append([I], K, L),
        B=..['.',H|J],
        append(L, [C], D).
/*gensym__2(_11281)=gensym(eval,_11281)*/
gensym__2(A) :-
        var(A),
        oldvalue__1(eval, B),
        C is B+1,
        set_flag__1(eval, C),
        name(C, D),
        name(A, [101,118,97,108,95,95|D]).
/*pretty_print_clauses__1(_11863)=pretty_print_clauses(_11863)*/
pretty_print_clauses__1([]).
pretty_print_clauses__1([A|B]) :-
        flatten__1(A, C),
        portray_clause(C),
        pretty_print_clauses__1(B).
/*memo__2(_10001,_10003,_10005,_9976)=memo(eval(_10001,_10003,_10005),_9976)*/
memo__2(A, B, C, D) :-
        (   memo_table(eval(A,B,C), D) ->
            true
        ;   gen_filter__1([B,C], [E,F], G),
            gensym__2(H),
            I=..[H|G],
            assert(memo_table(eval(A,E,F),I)),
            findall((I:-J), unfold__4(A,E,F,J), K),
            format('/*~k=~k*/~n', [I,eval(A,E,F)]),
            pretty_print_clauses__1(K),
            memo_table(eval(A,B,C), D)
        ).
/*unfold__10(_9241,_9243,_9218)=unfold(function(_9241,_9243),_9218)*/
unfold__10(fib, lambda(x,if(eq(var(x),cst(0)),cst(1),if(eq(var(x),cst(1)),cst(1),plus(apply(minus(var(x),cst(1)),fun(fib)),apply(minus(var(x),cst(2)),fun(fib)))))), true).
/*unfold__4(_8959,_8961,_8963,_8934)=unfold(eval(_8959,_8961,_8963),_8934)*/
unfold__4(cst(A), _, constr(A,[]), true).
unfold__4(constr(A,B), C, constr(A,D), E) :-
        unfold__5(B, C, D, E).
unfold__4(var(A), B, C, D) :-
        unfold__6(A, B, C, D).
unfold__4(plus(A,B), C, constr(D,[]), (E,F,D is G+H)) :-
        unfold__4(A, C, constr(G,[]), E),
        unfold__4(B, C, constr(H,[]), F).
unfold__4(minus(A,B), C, constr(D,[]), (E,F,D is G-H)) :-
        unfold__4(A, C, constr(G,[]), E),
        unfold__4(B, C, constr(H,[]), F).
unfold__4(times(A,B), C, constr(D,[]), (E,F,D is G*H)) :-
        unfold__4(A, C, constr(G,[]), E),
        unfold__4(B, C, constr(H,[]), F).
unfold__4(eq(A,B), C, constr(D,[]), (E,F,(G=H->D=true;D=false))) :-
        unfold__4(A, C, G, E),
        unfold__4(B, C, H, F).
unfold__4(let(A,B,C), D, E, (F,G,H)) :-
        unfold__4(B, D, I, F),
        unfold__3(D, A, I, J, G),
        unfold__4(C, J, E, H).
unfold__4(if(A,B,C), D, E, F) :-
        unfold__7(A, B, C, D, E, F).
unfold__4(if2(A,B,C), D, E, (F,(G=constr(true,[])->H;I))) :-
        unfold__4(A, D, G, F),
        term_variables(logen(unfold,eval(B,D,E)), J),
        findall((K,J), unfold__4(B,D,E,K), L),
        (   L=[] ->
            H=fail
        ;   make_disj__1(L, J, M),
            flatten__1(M, H)
        ),
        term_variables(logen(unfold,eval(C,D,E)), N),
        findall((O,N), unfold__4(C,D,E,O), P),
        (   P=[] ->
            I=fail
        ;   make_disj__1(P, N, Q),
            flatten__1(Q, I)
        ).
unfold__4(lambda(A,B), _, lambda(A,B), true).
unfold__4(apply(A,B), C, D, (E,F,G,H,I)) :-
        unfold__4(B, C, J, E),
        unfold__9(J, C, lambda(K,L), F),
        unfold__4(A, C, M, G),
        unfold__3(C, K, M, N, H),
        memo__2(L, N, D, I).
unfold__4(fun(A), _, B, C) :-
        unfold__10(A, B, C).
unfold__4(print(A), _, constr(true,[]), (print(A),nl)).
/*unfold__2(_8019,_8021,_7996)=unfold(fib(_8019,_8021),_7996)*/
unfold__2(A, B, (C,D)) :-
        unfold__3([], x, A, E, C),
        unfold__4(apply(cst(A),fun(fib)), E, constr(B,_), D).
/*unfold__1(_7676,_7678,_7653)=unfold(bench(_7676,_7678),_7653)*/
unfold__1(A, B, (A>B,print('Done'),nl)).
unfold__1(A, B, (A=<B,C,!,print(fib(A)),print(' == '),print(D),nl,E is A+1,F)) :-
        unfold__2(A, D, C),
        memo__1(E, B, F).
/*memo__1(_6743,_6745,_6720)=memo(bench(_6743,_6745),_6720)*/
memo__1(A, B, C) :-
        (   memo_table(bench(A,B), C) ->
            true
        ;   gensym__1(D),
            E=..[D,F,G],
            assert(memo_table(bench(F,G),E)),
            findall((E:-H), unfold__1(F,G,H), I),
            format('/*~k=~k*/~n', [E,bench(F,G)]),
            pretty_print_clauses__1(I),
            memo_table(bench(A,B), C)
        ).
/*lix__1(_6495,_6497,_6472)=lix(bench(_6495,_6497),_6472)*/
lix__1(A, B, C) :-
        retractall(memo_table(_,_)),
        print('/*Generated by Lix*/\n'),
        print(':- dynamic flag/2, memo_table/2.\n'),
        print(':- use_module(library(lists)).\n'),
        print(':- use_module(library(terms)).\n'),
        print(':- op(1150, fx, type).\n'),
        memo__1(A, B, C).
gx(bench(A,B), C) :-
        lix__1(A, B, C).
