/*Generated by Lix*/
:- dynamic flag/2, memo_table/2.
:- use_module(library(lists)).
:- use_module(library(terms)).
:- op(1150, fx, type).
/*oldvalue__1(_6927,_6929)=oldvalue(_6927,_6929)*/
oldvalue__1(A, B) :-
        flag(gensym(A), B), !.
oldvalue__1(_, 0).
/*set_flag__1(_7266,_7272)=set_flag(gensym(_7266),_7272)*/
set_flag__1(A, B) :-
        retract(flag(gensym(A),_)), !,
        asserta(flag(gensym(A),B)).
set_flag__1(A, B) :-
        asserta(flag(gensym(A),B)).
/*gensym__1(_6789)=gensym(test,_6789)*/
gensym__1(A) :-
        var(A),
        oldvalue__1(test, B),
        C is B+1,
        set_flag__1(test, C),
        name(C, D),
        name(A, [116,101,115,116,95,95|D]).
/*unfold__2(_7336,_7342)=unfold(p(_7336),_7342)*/
unfold__2(a, true).
unfold__2(b, true).
/*simplify_eqL__1(_8110,_8112,_8114)=simplify_eqL(_8110,_8112,_8114)*/
simplify_eqL__1([A], [B], C) :-
        simplify_eq__1(A, B, C).
simplify_eqL__1([A|B], [C|D], (E,F)) :-
        simplify_eq__1(A, C, E),
        simplify_eqL__1(B, D, F).
/*simplify_eq__1(_7950,_7952,_7954)=simplify_eq(_7950,_7952,_7954)*/
simplify_eq__1(A, B, fail) :-
        A\=B.
simplify_eq__1(A, B, true) :-
        A==B.
simplify_eq__1(A, B, A=B) :-
        var(A), !.
simplify_eq__1(A, B, A=B) :-
        var(B), !.
simplify_eq__1(A, B, C) :-
        nonvar(A),
        nonvar(B),
        functor(A, D, E),
        functor(B, D, E),
        A=..[D|F],
        B=..[D|G],
        simplify_eqL__1(F, G, C).
/*make_disj__1(_7818,_7820,_7822)=make_disj(_7818,_7820,_7822)*/
make_disj__1([(A,B)], C, D) :-
        simplify_eq__1(B, C, E),
        D=(E,A).
make_disj__1([(A,B)|C], D, (E;F)) :-
        make_disj__1(C, D, F),
        simplify_eq__1(B, D, G),
        E=(G,A).
/*flatten__1(_8251,_8253)=flatten(_8251,_8253)*/
flatten__1((A:-B), (A:-C)) :- !,
        flatten__1(B, C).
flatten__1((A,B), C) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D,E)
        ).
flatten__1((A;B), C) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D;E)
        ).
flatten__1((A->B;C), (D->E;F)) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        flatten__1(C, F).
flatten__1(A, A).
/*unfold__1(_7179,_7185)=unfold(test(_7179),_7185)*/
unfold__1(A, B) :-
        term_variables(logen(unfold,p(A)), C),
        findall((D,C), unfold__2(A,D), E),
        (   E=[] ->
            B=fail
        ;   make_disj__1(E, C, F),
            flatten__1(F, B)
        ).
/*pretty_print_clauses__1(_7676)=pretty_print_clauses(_7676)*/
pretty_print_clauses__1([]).
pretty_print_clauses__1([A|B]) :-
        flatten__1(A, C),
        portray_clause(C),
        pretty_print_clauses__1(B).
/*memo__1(_6523,_6529)=memo(test(_6523),_6529)*/
memo__1(A, B) :-
        (   memo_table(test(A), B) ->
            true
        ;   gensym__1(C),
            D=..[C,E],
            assert(memo_table(test(E),D)),
            findall((D:-F), unfold__1(E,F), G),
            format('/*~k=~k*/~n', [D,test(E)]),
            pretty_print_clauses__1(G),
            memo_table(test(A), B)
        ).
/*lix__1(_6381,_6387)=lix(test(_6381),_6387)*/
lix__1(A, B) :-
        retractall(memo_table(_,_)),
        print('/*Generated by Lix*/\n'),
        print(':- dynamic flag/2, memo_table/2.\n'),
        print(':- use_module(library(lists)).\n'),
        print(':- use_module(library(terms)).\n'),
        print(':- op(1150, fx, type).\n'),
        memo__1(A, B).
gx(test(A), B) :-
        lix__1(A, B).
