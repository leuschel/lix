/*Generated by Lix*/
:- dynamic flag/2, memo_table/2.
:- use_module(library(lists)).
:- use_module(library(terms)).
:- op(1150, fx, type).
/*oldvalue__1(_7399,_7400)=oldvalue(_7399,_7400)*/
oldvalue__1(A, B) :-
        flag(gensym(A), B), !.
oldvalue__1(_, 0).
/*set_flag__1(_7884,_7863)=set_flag(gensym(_7884),_7863)*/
set_flag__1(A, B) :-
        retract(flag(gensym(A),_)), !,
        asserta(flag(gensym(A),B)).
set_flag__1(A, B) :-
        asserta(flag(gensym(A),B)).
/*gensym__1(_7136)=gensym(fib,_7136)*/
gensym__1(A) :-
        var(A),
        oldvalue__1(fib, B),
        C is B+1,
        set_flag__1(fib, C),
        name(C, D),
        name(A, [102,105,98,95,95|D]).
/*unfold__2(_7939,_7941,_7943,_7945,_7912)=unfold(store(_7939,_7941,_7943,_7945),_7912)*/
unfold__2([], A, B, [A/B], true).
unfold__2([A/_|B], A, C, [A/C|B], true).
unfold__2([A/B|C], D, E, [A/B|F], (true,G)) :-
        call(D\==A),
        unfold__2(C, D, E, F, G).
/*unfold__4(_8846,_8848,_8850,_8821)=unfold(l_eval(_8846,_8848,_8850),_8821)*/
unfold__4([], _, [], true).
unfold__4([A|B], C, [D|E], (F,G)) :-
        unfold__3(A, C, D, F),
        unfold__4(B, C, E, G).
/*unfold__5(_8842,_8844,_8846,_8817)=unfold(lookup(_8842,_8844,_8846),_8817)*/
unfold__5(A, [A/B|_], B, true).
unfold__5(A, [B/_|C], D, (A\==B,E)) :-
        unfold__5(A, C, D, E).
/*unfold__7(_9180,_9182,_9157)=unfold(test(_9180,_9182),_9157)*/
unfold__7(eq(A,B), C, (D,E)) :-
        unfold__3(A, C, F, D),
        unfold__3(B, C, F, E).
/*unfold__6(_8850,_8852,_8854,_8856,_8858,_8821)=unfold(eval_if(_8850,_8852,_8854,_8856,_8858),_8821)*/
unfold__6(A, B, _, C, D, (E,!,F)) :-
        unfold__7(A, C, E),
        unfold__3(B, C, D, F).
unfold__6(_, _, A, B, C, D) :-
        unfold__3(A, B, C, D).
/*simplify_eqL__1(_9600,_9601,_9602)=simplify_eqL(_9600,_9601,_9602)*/
simplify_eqL__1([A], [B], C) :-
        simplify_eq__1(A, B, C).
simplify_eqL__1([A|B], [C|D], (E,F)) :-
        simplify_eq__1(A, C, E),
        simplify_eqL__1(B, D, F).
/*simplify_eq__1(_9288,_9289,_9290)=simplify_eq(_9288,_9289,_9290)*/
simplify_eq__1(A, B, fail) :-
        A\=B.
simplify_eq__1(A, B, true) :-
        A==B.
simplify_eq__1(A, B, A=B) :-
        var(A), !.
simplify_eq__1(A, B, A=B) :-
        var(B), !.
simplify_eq__1(A, B, C) :-
        nonvar(A),
        nonvar(B),
        functor(A, D, E),
        functor(B, D, E),
        A=..[D|F],
        B=..[D|G],
        simplify_eqL__1(F, G, C).
/*make_disj__1(_9048,_9049,_9050)=make_disj(_9048,_9049,_9050)*/
make_disj__1([(A,B)], C, D) :-
        simplify_eq__1(B, C, E),
        D=(E,A).
make_disj__1([(A,B)|C], D, (E;F)) :-
        make_disj__1(C, D, F),
        simplify_eq__1(B, D, G),
        E=(G,A).
/*flatten__1(_9575,_9576)=flatten(_9575,_9576)*/
flatten__1((A:-B), (A:-C)) :- !,
        flatten__1(B, C).
flatten__1((A,B), C) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D,E)
        ).
flatten__1((A;B), C) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        (   D=true ->
            C=E
        ;   E=true ->
            C=D
        ;   C=(D;E)
        ).
flatten__1((A->B;C), (D->E;F)) :- !,
        flatten__1(A, D),
        flatten__1(B, E),
        flatten__1(C, F).
flatten__1(A, A).
/*unfold__8(_8964,_8966,_8968,_8939)=unfold(rename(_8964,_8966,_8968),_8939)*/
unfold__8(A, _, B, true) :-
        call(B=A).
/*gen_filter__2(_10519,_10520,_10521)=gen_filter('.'(;(struct([],[]),struct('.','.'(struct(/,'.'(static,'.'(dynamic,[]))),'.'(type(list(struct(/,'.'(static,'.'(dynamic,[]))))),[])))),[]),_10519,_10520,_10521)*/
gen_filter__2([A], [B], C) :-
        A=..[[]],
        B=..[[]],
        append([], [], C).
gen_filter__2([A], [B], C) :-
        A=..['.',D|E],
        D=..[/,F,_],
        G=..[/,F,H],
        gen_filter__2(E, I, J),
        append([H], J, K),
        B=..['.',G|I],
        append(K, [], C).
/*gen_filter__1(_10079,_10080,_10081)=gen_filter('.'(;(struct([],[]),struct('.','.'(struct(/,'.'(static,'.'(dynamic,[]))),'.'(type(list(struct(/,'.'(static,'.'(dynamic,[]))))),[])))),'.'(dynamic,[])),_10079,_10080,_10081)*/
gen_filter__1([A,_], [B,C], D) :-
        A=..[[]],
        B=..[[]],
        append([], [C], D).
gen_filter__1([A,_], [B,C], D) :-
        A=..['.',E|F],
        E=..[/,G,_],
        H=..[/,G,I],
        gen_filter__2(F, J, K),
        append([I], K, L),
        B=..['.',H|J],
        append(L, [C], D).
/*gensym__2(_10879)=gensym(eval,_10879)*/
gensym__2(A) :-
        var(A),
        oldvalue__1(eval, B),
        C is B+1,
        set_flag__1(eval, C),
        name(C, D),
        name(A, [101,118,97,108,95,95|D]).
/*pretty_print_clauses__1(_11461)=pretty_print_clauses(_11461)*/
pretty_print_clauses__1([]).
pretty_print_clauses__1([A|B]) :-
        flatten__1(A, C),
        portray_clause(C),
        pretty_print_clauses__1(B).
/*memo__2(_9599,_9601,_9603,_9574)=memo(eval(_9599,_9601,_9603),_9574)*/
memo__2(A, B, C, D) :-
        (   memo_table(eval(A,B,C), D) ->
            true
        ;   gen_filter__1([B,C], [E,F], G),
            gensym__2(H),
            I=..[H|G],
            assert(memo_table(eval(A,E,F),I)),
            findall((I:-J), unfold__3(A,E,F,J), K),
            format('/*~k=~k*/~n', [I,eval(A,E,F)]),
            pretty_print_clauses__1(K),
            memo_table(eval(A,B,C), D)
        ).
/*unfold__9(_8839,_8841,_8816)=unfold(function(_8839,_8841),_8816)*/
unfold__9(fib, lambda(x,if(eq(var(x),cst(0)),cst(1),if(eq(var(x),cst(1)),cst(1),plus(apply(minus(var(x),cst(1)),fun(fib)),apply(minus(var(x),cst(2)),fun(fib)))))), true).
/*unfold__3(_8557,_8559,_8561,_8532)=unfold(eval(_8557,_8559,_8561),_8532)*/
unfold__3(cst(A), _, constr(A,[]), true).
unfold__3(constr(A,B), C, constr(A,D), E) :-
        unfold__4(B, C, D, E).
unfold__3(var(A), B, C, D) :-
        unfold__5(A, B, C, D).
unfold__3(plus(A,B), C, constr(D,[]), (E,F,D is G+H)) :-
        unfold__3(A, C, constr(G,[]), E),
        unfold__3(B, C, constr(H,[]), F).
unfold__3(minus(A,B), C, constr(D,[]), (E,F,D is G-H)) :-
        unfold__3(A, C, constr(G,[]), E),
        unfold__3(B, C, constr(H,[]), F).
unfold__3(times(A,B), C, constr(D,[]), (E,F,D is G*H)) :-
        unfold__3(A, C, constr(G,[]), E),
        unfold__3(B, C, constr(H,[]), F).
unfold__3(eq(A,B), C, constr(D,[]), (E,F,(G=H->D=true;D=false))) :-
        unfold__3(A, C, G, E),
        unfold__3(B, C, H, F).
unfold__3(let(A,B,C), D, E, (F,G,H)) :-
        unfold__3(B, D, I, F),
        unfold__2(D, A, I, J, G),
        unfold__3(C, J, E, H).
unfold__3(if(A,B,C), D, E, F) :-
        unfold__6(A, B, C, D, E, F).
unfold__3(if2(A,B,C), D, E, (F,(G=constr(true,[])->H;I))) :-
        unfold__3(A, D, G, F),
        term_variables(logen(unfold,eval(B,D,E)), J),
        findall((K,J), unfold__3(B,D,E,K), L),
        (   L=[] ->
            H=fail
        ;   make_disj__1(L, J, M),
            flatten__1(M, H)
        ),
        term_variables(logen(unfold,eval(C,D,E)), N),
        findall((O,N), unfold__3(C,D,E,O), P),
        (   P=[] ->
            I=fail
        ;   make_disj__1(P, N, Q),
            flatten__1(Q, I)
        ).
unfold__3(lambda(A,B), _, lambda(A,B), true).
unfold__3(apply(A,B), C, D, (E,F,G,H,I)) :-
        unfold__3(B, C, J, E),
        unfold__8(J, C, lambda(K,L), F),
        unfold__3(A, C, M, G),
        unfold__2(C, K, M, N, H),
        memo__2(L, N, D, I).
unfold__3(fun(A), _, B, C) :-
        unfold__9(A, B, C).
unfold__3(print(A), _, constr(true,[]), (print(A),nl)).
/*unfold__1(_7661,_7663,_7638)=unfold(fib(_7661,_7663),_7638)*/
unfold__1(A, B, (C,D)) :-
        unfold__2([], x, A, E, C),
        unfold__3(apply(cst(A),fun(fib)), E, constr(B,_), D).
/*memo__1(_6732,_6734,_6709)=memo(fib(_6732,_6734),_6709)*/
memo__1(A, B, C) :-
        (   memo_table(fib(A,B), C) ->
            true
        ;   gensym__1(D),
            E=..[D,F,G],
            assert(memo_table(fib(F,G),E)),
            findall((E:-H), unfold__1(F,G,H), I),
            format('/*~k=~k*/~n', [E,fib(F,G)]),
            pretty_print_clauses__1(I),
            memo_table(fib(A,B), C)
        ).
/*lix__1(_6484,_6486,_6461)=lix(fib(_6484,_6486),_6461)*/
lix__1(A, B, C) :-
        retractall(memo_table(_,_)),
        print('/*Generated by Lix*/\n'),
        print(':- dynamic flag/2, memo_table/2.\n'),
        print(':- use_module(library(lists)).\n'),
        print(':- use_module(library(terms)).\n'),
        print(':- op(1150, fx, type).\n'),
        memo__1(A, B, C).
lix(fib(5,A), B) :-
        lix__1(5, A, B).
